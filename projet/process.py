import os
import subprocess

# Définir des mots-clés pour la recherche de données sensibles
sensitive_keywords = ['password', 'confidential', 'secret']

# Chemins à explorer pour les données sensibles
paths_to_explore = ['/home', '/var/log', '/etc']

# Fonction pour rechercher des fichiers contenant des mots-clés sensibles
def search_sensitive_data(paths, keywords):
    found_files = []
    for path in paths:
        for root, dirs, files in os.walk(path):
            for file in files:
                file_path = os.path.join(root, file)
                try:
                    with open(file_path, 'r', errors='ignore') as f:
                        contents = f.read()
                    for keyword in keywords:
                        if keyword in contents:
                            found_files.append(file_path)
                            break
                except Exception as e:
                    print(f"Cannot read file {file_path}: {e}")
    return found_files

# Fonction pour obtenir les configurations de sécurité du système
def get_system_security_config():
    try:
        # Vérifier les services actifs
        active_services = subprocess.check_output(['systemctl', 'list-units', '--type=service', '--state=running'], text=True)
        # Vérifier les ports ouverts
        open_ports = subprocess.check_output(['ss', '-tuln'], text=True)
        return active_services, open_ports
    except subprocess.CalledProcessError as e:
        return str(e), str(e)

# Exécuter les fonctions et imprimer les résultats
if __name__ == "__main__":
    sensitive_files = search_sensitive_data(paths_to_explore, sensitive_keywords)
    print("Fichiers sensibles trouvés:")
    for file in sensitive_files:
        print(file)

    services_info, ports_info = get_system_security_config()
    print("\nServices actifs:")
    print(services_info)
    print("\nPorts ouverts:")
    print(ports_info)
