import subprocess
import sys
import os
from colorama import init, Fore, Style

def create_output_directory(directory):
    if not os.path.exists(directory):
        os.makedirs(directory)

# Initialize Colorama
init(autoreset=True)

def run_command(command, output_file):
    # Open the file for writing
    with open(output_file, 'w') as f:
        # Run the command and stream output
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        # Read and write stdout
        for line in iter(process.stdout.readline, ''):
            print(Fore.GREEN + line, end='')  # Print colored output to terminal
            f.write(line)                    # Write output to file

        # Read and write stderr
        for line in iter(process.stderr.readline, ''):
            print(Fore.RED + line, end='', file=sys.stderr)  # Print colored error to terminal
            f.write(line)                             # Write error to file

        # Wait for the process to finish
        process.stdout.close()
        process.stderr.close()
        process.wait()

def enumerate_smb_shares(target_ip):
    output_dir = "enumeration"
    create_output_directory(output_dir)
    output_file = os.path.join(output_dir, f"smb_shares_{target_ip}.txt")
    print(f"Enumerating SMB shares on {target_ip}. Results will be saved to {output_file}...")
    command = ["smbclient", "-L", f"//{target_ip}", "-N"]
    run_command(command, output_file)

def enumerate_users(target_ip):
    output_dir = "enumeration"
    create_output_directory(output_dir)
    output_file = os.path.join(output_dir, f"users_{target_ip}.txt")
    print(f"Enumerating users on {target_ip}. Results will be saved to {output_file}...")
    command = ["rpcclient", "-U", "", "-N", target_ip, "-c", "enumdomusers"]
    run_command(command, output_file)

def run_gobuster_scan(target_url):
    output_dir = "enumeration"
    create_output_directory(output_dir)
    sanitized_url = target_url.replace('http://', '').replace('https://', '').replace('/', '_')
    output_file = os.path.join(output_dir, f"gobuster_{sanitized_url}.txt")
    print(f"Running Gobuster directory scan on {target_url}. Results will be saved to {output_file}...")
    command = ["gobuster", "dir", "-u", target_url, "-w", "/usr/share/wordlists/dirb/common.txt"]
    run_command(command, output_file)

def main():
    if len(sys.argv) != 3:
        print("Usage: python EnumerationTool.py <target_ip_or_url> <enum_type>")
        print("Enumeration types: 1 = SMB Shares, 2 = Users, 3 = Web Directories")
        sys.exit(1)

    target = sys.argv[1]
    enum_type = sys.argv[2]

    if enum_type == "1":
        enumerate_smb_shares(target)
    elif enum_type == "2":
        enumerate_users(target)
    elif enum_type == "3":
        run_gobuster_scan(target)
    else:
        print("Invalid enumeration type. Choose 1, 2, or 3.")


if __name__ == "__main__":
    main()
