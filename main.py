import pyfiglet
import subprocess
from colorama import init, Fore, Style

# Initialize Colorama for color support
init(autoreset=True)

def show_banner():
    ascii_banner = Fore.BLUE + pyfiglet.figlet_format("PentestBox")
    print(ascii_banner)


def show_menu():
    print("Please choose an option:")
    print(f"{Fore.YELLOW}1.{Fore.RESET} Password Analysis")
    print(f"{Fore.YELLOW}2.{Fore.RESET} Scan")
    print(f"{Fore.YELLOW}3.{Fore.RESET} Exploit Vulnerability")
    print(f"{Fore.YELLOW}4.{Fore.RESET} Enumeration")
    print(f"{Fore.YELLOW}5.{Fore.RESET} Authentication Test")
    print(f"{Fore.YELLOW}6.{Fore.RESET} Post Exploitation")
    choice = input(f"{Fore.CYAN}Enter your choice (1, 2, 3, 4, 5 or 6): {Fore.RESET}")
    return choice


def main():
    show_banner()
    choice = show_menu()

    if choice == "1":
        password = input("Enter the password to analyze: ")
        subprocess.run(["python", "PasswordChecking.py", password])

    elif choice == "2":
        target_ip = input("Enter the target IP address: ")
        print("Choose a scan type:")
        print(f"{Fore.YELLOW}1. Port{Fore.RESET}    : Shows all open ports (~15 seconds)")
        print(f"{Fore.YELLOW}2. Script{Fore.RESET}  : Runs a script scan on found ports (~5 minutes)")
        print(f"{Fore.YELLOW}3. Full{Fore.RESET}    : Runs a full range port scan and script scan (~5-10 minutes)")
        print(f"{Fore.YELLOW}4. UDP{Fore.RESET}     : Runs a UDP scan 'requires sudo' (~5 minutes)")
        print(f"{Fore.YELLOW}5. Vulns{Fore.RESET}   : Runs CVE scan and nmap Vulns scan on all found ports (~5-15 minutes)")
        print(f"{Fore.YELLOW}6. Recon{Fore.RESET}   : Suggests recon commands and runs them")
        print(f"{Fore.YELLOW}7. All{Fore.RESET}     : Runs all the scans (~20-30 minutes)")
        print(f"{Fore.YELLOW}8. Web{Fore.RESET}     : Runs web vulnerability scans using Nikto and SQLMap")
        print(f"{Fore.YELLOW}9. Network{Fore.RESET} : Shows all live hosts in the host's network (~15 seconds)")
        
        scan_input = input(f"{Fore.CYAN}Enter the scan type: {Fore.RESET}")
        
        scan_type = ""
        if scan_input == "1":
            scan_type = "Port"
        elif scan_input == "2":
            scan_type = "Script"
        elif scan_input == "3":
            scan_type = "Full"
        elif scan_input == "4":
            scan_type = "UDP"
        elif scan_input == "5":
            scan_type = "Vulns"
        elif scan_input == "6":
            scan_type = "Recon"
        elif scan_input == "7":
            scan_type = "all"
        elif scan_input == "8":
            scan_type = "Web"
        elif scan_input == "9":
            scan_type = "network"
        else:
            print(f"{Fore.RED}Invalid choice{Fore.RESET}")
            exit()
        
        subprocess.run(["python", "ToolBoxScanner.py", '-H', target_ip, '-t', scan_type])

    elif choice == "3":
        target_ip = input("Enter the target IP address: ")
        subprocess.run(["python", "exploit_vulns.py", target_ip])

    elif choice == "4":
        target = input("Enter the target IP address or URL: ")
        print("Choose an enumeration type:")
        print(f"{Fore.YELLOW}1. SMB Shares{Fore.RESET}")
        print(f"{Fore.YELLOW}2. Users{Fore.RESET}")
        print(f"{Fore.YELLOW}3. Web Directories{Fore.RESET}")
        print(f"{Fore.YELLOW}4. Enum4Linux{Fore.RESET}")
        print(f"{Fore.YELLOW}5. Nmap SMB Enumeration{Fore.RESET}")
        print(f"{Fore.YELLOW}6. LDAP Enumeration{Fore.RESET}")
        print(f"{Fore.YELLOW}7. NetBIOS Scan{Fore.RESET}")
        
        enum_type = input(f"{Fore.CYAN}Enter the enumeration type (1-7): {Fore.RESET}")
        subprocess.run(["python", "EnumerationTool.py", target, enum_type])

    elif choice == "5":
        subprocess.run(["python3", "Auth_bruteforce.py"])

    elif choice == "6":
        print("Choose system:")
        print(f"{Fore.YELLOW}1. Linux{Fore.RESET}")
        print(f"{Fore.YELLOW}2. Windows{Fore.RESET}")
        
        system = input(f"{Fore.CYAN}Enter system number: {Fore.RESET}")
        if system == "1":
            subprocess.run(["chmod", "+x", "linpeas.sh"])
            subprocess.run(["./linpeas.sh"])
        elif system == "2":
            subprocess.run(["winPEASany.exe"])
        else:
            print(f"{Fore.RED}Invalid choice. Please select 1 or 2.{Fore.RESET}")
    else:
        print(f"{Fore.RED}Invalid choice. Please select 1, 2, 3, 4, 5 or 6.{Fore.RESET}")


if __name__ == "__main__":
    main()
